name: CI

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

env:
  PRIMARY_NODE_VERSION: 20

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.PRIMARY_NODE_VERSION }}
          cache: yarn
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Run check
        run: yarn lint
      - name: Run typecheck
        run: yarn typecheck

  test:
    name: Test
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        node: [18.x, 20.x, 22.x]

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Install Node.js ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: yarn
      - name: Install dependencies
        run: yarn install --frozen-lockfile

        # collect coverage on the primary node version
        # we don't collect coverage on other node versions so they run faster
      - name: Run unit tests with coverage
        if: matrix.node == env.PRIMARY_NODE_VERSION && matrix.os == 'ubuntu-latest'
        run: yarn test --coverage
      - name: Run unit tests
        if: matrix.node != env.PRIMARY_NODE_VERSION || matrix.os != 'ubuntu-latest'
        run: yarn test
      - name: Publish code coverage report
        if: matrix.node == env.PRIMARY_NODE_VERSION && matrix.os == 'ubuntu-latest'
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage/**/lcov.info
